@model dpaw_alerts.ViewModels.UserViewModel

@{
    ViewBag.Title = "Create new user";
    
}

<div id="breadcrumb">
    <ul class="breadcrumb">
        <li><i class="fa fa-home"></i><a href="~/Home"> Home</a></li>
        <li><a href="~/User"> Users</a></li>
        <li class="active">Create User</li>
    </ul>
</div><!-- /breadcrumb-->
<p> </p>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-md-7">
            <div class="form-horizontal">
                <h2>Create New User</h2>
                <hr />
                <div id="msg"></div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })

                    </div>
                    <div class="col-md-4 form-inline pull-left">
                        <input type="button" id="getUser" value="Check User" class="btn btn-success" />
                        <input type="button" id="btnClear" value="Clear" class="btn btn-default" />
                    </div>

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.SelectedRole, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.DropDownListFor(model => model.SelectedRole, Model.Roles, "", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SelectedRole, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Submit" class="btn btn-primary" /> @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    $(document).ready(function () {

        $("#btnClear").click(function () {
            $("#UserName").val("") ;
            $("#FirstName").val("");
            $("#LastName").val("");
            $("#Email").val("");
            $("#PhoneNumber").val("");
        });

        $("#getUser").click(function () {

            if ($("#UserName").val().length == 0)
            {
                alert("Please enter a user name");
            }
            else
            {
         
            $.ajax({
                url: '@Url.Action("GetUserData", "User")',
                type: 'POST',
                dataType: 'json',
                data: { 'userName': $("#UserName").val() },
                contentType: 'application/x-www-form-urlencoded',
                success: function (data) {
                    if (data.success) {
                        // fill the user information from AD
                        $("#FirstName").val(data.model.FirstName);
                        $("#LastName").val(data.model.LastName);
                        $("#Email").val(data.model.Email.toLowerCase());
                        $("#PhoneNumber").val(data.model.PhoneNumber);
                        
                        $("#msg").html("<div class='alert alert-success'>User details fetched, click on submit button to create user! </div>");
                    }
                    else {
                        // show a message in a alert or div
                        $("#msg").html("<div class='alert alert-danger'>This username you have entered is not valid. Please try again! </div>");
                    }
                }
            });
            }
        });
    });


</script>

