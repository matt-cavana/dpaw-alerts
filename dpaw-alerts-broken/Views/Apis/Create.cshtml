@model dpaw_alerts.Models.Api

@{
    ViewBag.Title = "Create";
}

<div id="breadcrumb">
    <ul class="breadcrumb">
        <li><i class="fa fa-home"></i><a href="~/Home"> Home</a></li>
        <li><a href="~/Apis">System API</a></li>
        <li class="active">Create API</li>
    </ul>
</div><!-- /breadcrumb-->
<p> </p>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-md-7">
            <div class="form-horizontal">
                <h4>Create API</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.AId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("AId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Token, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Token, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Token, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ExpiryDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ExpiryDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                        @Html.ValidationMessageFor(model => model.ExpiryDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                     @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })   <input type="submit" value="Create" class="btn btn-info" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Styles.Render("~/Content/css/form")
    @Scripts.Render("~/bundles/date")
    <script>
            $(function () {

                    //fix jquery date validation issue
                    $.validator.methods.date = function (value, element) {
                        return this.optional(element) || $.datepicker.parsedate('dd/mm/yy', value);
                    }

                    $.datetimepicker.setDateFormatter({
                        parseDate: function (date, format) {
                            var d = moment(date, format);
                            return d.isValid() ? d.toDate() : false;
                        },

                        formatDate: function (date, format) {
                            return moment(date).format(format);
                        }
                    });

                    $('#ExpiryDate').datetimepicker({
                        format: 'DD/MM/YYYY hh:mm a',
                        formatTime: 'hh:mm a',
                        formatDate: 'DD/MM/YYYY',
                        minDate: '-1970/01/02'
                    });


            });

    </script>
}


